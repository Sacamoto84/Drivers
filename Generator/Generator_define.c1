#include "Generator_define.h"
#include <math.h>

#include "SEGGER_SYSVIEW.h"
#include "SEGGER_SYSVIEW_Conf.h"
	
volatile uint16_t CH1_AM_EN;		
volatile uint16_t CH1_FM_EN;		

uint32_t rC_1;		
uint32_t angle_cr1;
  
uint32_t rAM_1;		
uint32_t angle_m1;

//FM
uint32_t rFM_1;
uint32_t angle_fm1;

uint16_t Carrier;             //“екуща€ форма волны
uint16_t AM_Modulation_CH1;   //“ип AM модул€ции

float FM1_Base;
float FM1_Deviation;
uint16_t FM_Modulation_CH1;   //“ип FM модул€ции

volatile uint16_t CH2_AM_EN;		
volatile uint16_t CH2_FM_EN;		

uint32_t rC_2;		
uint32_t angle_cr2;
  
uint32_t rAM_2;		
uint32_t angle_m2;

//FM
uint32_t rFM_2;
uint32_t angle_fm2;

uint16_t Carrier2;            //“екуща€ форма волны
uint16_t AM_Modulation_CH2;   //“ип AM модул€ции

float FM2_Base;
float FM2_Deviation;
uint16_t FM_Modulation_CH2;   //“ип FM модул€ции

uint16_t Page_Plot_AM;
uint16_t Page_Plot_Am_Ch2;

uint16_t Page_Plot_Fm_Ch1;
uint16_t Page_Plot_Fm_Ch2;

float convertHzToR(float hz)
{
 hz = hz*16384.0F;
 return hz;
}	

float convertRToHz(float hz)
{
 hz = hz/16384.0F;
 return hz;
}	

//Ѕуфферы
volatile uint16_t buffer_carrier[SAMPLES];     //‘орма несущей волны —инус “р ѕр
volatile uint16_t buffer_am[AM_MODSAMPLES];          //‘орма аналоговой модул€ции
volatile uint16_t buffer_fm[FM_MODSAMPLES];           //‘орма частотной модул€ции

volatile uint16_t buffer_carrier2[SAMPLES];     //‘орма несущей волны —инус “р ѕр
volatile uint16_t buffer_am2[AM_MODSAMPLES];          //‘орма аналоговой модул€ции
volatile uint16_t buffer_fm2[FM_MODSAMPLES];           //‘орма частотной модул€ции

uint16_t OUTPUT[OUTPUTSAMPLES];//__attribute__((at(0x2001C000)));
//uint32_t *pOUTPUT;

//volatile int16_t audio_buffer0[4096]  ;//__attribute__((at(0x20002000)));
//volatile int16_t audio_buffer1[4096]  ;//__attribute__((at(0x20002000+0x2000)));

volatile int16_t DMA_Buffer_Current;
volatile int16_t DMA_Buffer_Update;

